name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (example: 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: '8.3'
          extensions: openswoole
          key: cache-v1

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: openswoole

      - name: Composer install
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP code checks
        run: composer run checks-ci

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install npm dependencies and Build
        run: |
          npm ci
          npm run build

      - name: Update composer.json dist URL and commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: composer_update_info
        run: |
          REPO=${GITHUB_REPOSITORY}
          TAG=${{ github.event.inputs.version }}
          ASSET_URL="https://github.com/${REPO}/releases/download/${TAG}/package.zip"
          jq --arg url "$ASSET_URL" '.dist.url = $url' composer.json > composer.tmp.json && mv composer.tmp.json composer.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add composer.json
          git commit -m "Update composer.json dist URL for release ${TAG}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Create ZIP archive
        run: |
          mkdir -p release
          zip -r release/package.zip composer.json src ui-public

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          make_latest: true
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/package.zip
          asset_name: package.zip
          asset_content_type: application/zip

      - name: Packagist push Update
        uses: mnavarrocarter/packagist-update@v1.0.0
        with:
          username: "romanzaycev"
          api_token: ${{ secrets.packagist_token }}
          package_name: romanzaycev/fundamenta
          domain: "packagist.org"
